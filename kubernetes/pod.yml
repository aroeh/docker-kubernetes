apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-deployment
  labels:
    environment: local
    layer: data
    app: cache
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: cache
  template:
    metadata:
      labels:
        app: cache
    spec:
      containers:
      - name: redis-container
        image: redis
        imagePullPolicy: Always
        resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
        ports:
          - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: cache-service
  labels:
    app: cache
spec:
  type: LoadBalancer
  selector:
    app: cache
  ports:
    - port: 6379
      targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weatherapi-deployment
  labels:
    environment: local
    framework: dotnet6
    layer: api
    app: api-weather
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: api-weather
  template:
    metadata:
      labels:
        app: api-weather
    spec:
      containers:
      - name: weatherapi-container
        image: kub-weather-api
        imagePullPolicy: Never
        resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
        ports:
          - containerPort: 80
            # protocol: TCP
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Development
          - name: ASPNETCORE_URLS
            value: http://+80
          - name: REDIS_HOST
            value: cache-service
          - name: REDIS_PORT
            value: "6379"
---
apiVersion: v1
kind: Service
metadata:
  name: weatherapi-service
  labels:
    app: api-weather
spec:
  type: LoadBalancer
  selector:
    app: api-weather
  ports:
    - port: 6001
      targetPort: 80
      # protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blazorapp-deployment
  labels:
    environment: local
    framework: blazor
    layer: frontend
    app: app-blazor
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: app-blazor
  template:
    metadata:
      labels:
        app: app-blazor
    spec:
      containers:
      - name: blazorapp-container
        image: kub-blazorwasm-app
        imagePullPolicy: Never
        resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
        ports:
          - containerPort: 80
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Development
---
apiVersion: v1
kind: Service
metadata:
  name: blazorapp-service
  labels:
    app: app-blazor
spec:
  type: ClusterIP
  selector:
    app: app-blazor
  ports:
    - port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: blazorapp-loadbalancer
spec:
  type: LoadBalancer
  ports:
  - port: 4001
    targetPort: 80
    protocol: TCP
  selector:
    app: app-blazor

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angularapp-deployment
  labels:
    environment: local
    framework: angular
    layer: frontend
    app: app-angular
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: app-angular
  template:
    metadata:
      labels:
        app: app-angular
    spec:
      containers:
      - name: angularapp-container
        image: kub-angular-app
        imagePullPolicy: Never
        resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
        ports:
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: angularapp-service
  labels:
    app: app-angular
spec:
  type: ClusterIP
  selector:
    app: app-angular
  ports:
    - port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: angularapp-loadbalancer
spec:
  type: LoadBalancer
  ports:
  - port: 5001
    targetPort: 80
    protocol: TCP
  selector:
    app: app-angular